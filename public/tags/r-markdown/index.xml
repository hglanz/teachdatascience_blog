<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Markdown on Teach Data Science</title>
    <link>https://teachdatascience.com/tags/r-markdown/</link>
    <description>Recent content in R Markdown on Teach Data Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>(c) 2019 Copyright Teach Data Science</copyright>
    <lastBuildDate>Sun, 28 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://teachdatascience.com/tags/r-markdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Counting commits and peer code review</title>
      <link>https://teachdatascience.com/countingcommits/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/countingcommits/</guid>
      <description>Today’s guest entry by Amelia McNamara (University of St. Thomas) describes a creative way that she tackled a problem in one of her upper level courses.
One note: The JSM is underway. Looking for interesting talks? Mine’s excellent Shiny for JSM 2019 app for those of you in Denver.
This past semester, I taught two sections of a course called Advanced Statistical Software (yes, I’m aware of the acronym. We’re changing the course title soon…).</description>
    </item>
    
    <item>
      <title>Counting commits and peer code review</title>
      <link>https://teachdatascience.com/countingcommits.knit/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/countingcommits.knit/</guid>
      <description>Today&amp;rsquo;s guest entry by Amelia McNamara (University of St. Thomas) describes a creative way that she tackled a problem in one of her upper level courses.
One note: The JSM is underway. Looking for interesting talks? Mine&amp;rsquo;s excellent Shiny for JSM 2019 app for those of you in Denver.
This past semester, I taught two sections of a course called Advanced Statistical Software (yes, I&amp;rsquo;m aware of the acronym. We&amp;rsquo;re changing the course title soon&amp;hellip;).</description>
    </item>
    
    <item>
      <title>Creating R data packages for teaching</title>
      <link>https://teachdatascience.com/datapackage/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/datapackage/</guid>
      <description>Today’s guest entry by Kelly McConville (Reed College) describes the creation of data packages in R by instructors and students.
Sharing data with studentsThe beginning of the data analysis cycle involves ingesting data. For novice students in the first week or two of an introductory course, this can be a tricky step. If I am new to R and I can’t even load the data, then my first impressions of R are not going to be too great.</description>
    </item>
    
    <item>
      <title>Creating R data packages for teaching</title>
      <link>https://teachdatascience.com/datapackage.knit/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/datapackage.knit/</guid>
      <description>Today&amp;rsquo;s guest entry by Kelly McConville (Reed College) describes the creation of data packages in R by instructors and students.
Sharing data with students The beginning of the data analysis cycle involves ingesting data. For novice students in the first week or two of an introductory course, this can be a tricky step. If I am new to R and I can&amp;rsquo;t even load the data, then my first impressions of R are not going to be too great.</description>
    </item>
    
    <item>
      <title>Teaching refactoring to improve code</title>
      <link>https://teachdatascience.com/refactoring/</link>
      <pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/refactoring/</guid>
      <description>A previous entry discussed the importance of coding style and “code smell” to help data analyses be clearer and more comprehensible. In this entry we will extend that discussion to describe ways of teaching code refactoring.
Wikipedia defines code refactoring as “the process of restructuring existing computer code—changing the factoring—without changing its external behavior. Refactoring is intended to improve nonfunctional attributes of the software. Advantages include improved code readability and reduced complexity; these can improve source-code maintainability and create a more expressive internal architecture or object model to improve extensibility.</description>
    </item>
    
    <item>
      <title>Five quick tips for coding in the classroom</title>
      <link>https://teachdatascience.com/teaching_programming_tips/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/teaching_programming_tips/</guid>
      <description>IntroHello!It’s my distinct pleasure to be guest-blogging for you today! My name is Kelly Bodwin and I’m an Assistant Professor of Statistics at Cal Poly, San Luis Obispo. In my two years at Cal Poly I have taught
Stat 218 - An introductory course for non-majorsStat 419 - An upper-level course in multivariate analysisStat 331 - Our department’s introductory R classIn all of these courses, I make extensive use of R.</description>
    </item>
    
    <item>
      <title>Creating Tutorials and Lessons in R using learnr</title>
      <link>https://teachdatascience.com/learnr/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/learnr/</guid>
      <description>What is the learnr package?The learnr package makes it easy to turn any R Markdown document into an interactive tutorial. With this vehicle instructors can offer interactive tools to their students to allow them to explore datasets in use from the class, a textbook, or even collected themselves. Straight from Garrett Grolemund’s fantastic introduction to the package, tutorials can include any or all of the following:
Narrative, figures, illustrations, and equations.</description>
    </item>
    
    <item>
      <title>Teaching Data Visualization</title>
      <link>https://teachdatascience.com/dataviz/</link>
      <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/dataviz/</guid>
      <description>As statistics educators, it is often easier to focus our teaching on methods instead of communication. And while many of us understand the value of good communication, actually teaching it is difficult and outside of our comfort zone. There has been quite a bit of work done on the science of visualization (e.g., the Grammar of Graphics by Wilkinson). There is general consensus that teaching students to communicate using visualizations is of paramount importance (see recent blog entries: National Academies Report on Data Science and GAISE).</description>
    </item>
    
    <item>
      <title>Less Volume More Creativity in R</title>
      <link>https://teachdatascience.com/mosaic/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/mosaic/</guid>
      <description>In 2016, GAISE enunciated the importance of multivariate thinking and technology when teaching introductory statistics and data science courses. A big challenge is how to do this using R and RStudio without running into cognitive overload with our students.
The mosaic package was created by Randall Pruim, Danny Kaplan, and Nicholas Horton with the goal of introducing a Less Volume, More Creativity approach to introductory statistics that could simplify the use of technology.</description>
    </item>
    
    <item>
      <title>SQL 101 in R</title>
      <link>https://teachdatascience.com/sql/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/sql/</guid>
      <description>The NASEM Data Science for Undergraduates report noted that the storage, preparation, and accessing of data is at the heart of data science and that students need to directly experience multiple forms of data, including the use of databases.
SQL (pronounced sequel) stands for Structured Query Language; it is a language designed to manage data in a relational database system. The papers https://chance.amstat.org/2015/04/setting-the-stage and https://chance.amstat.org/2015/04/databases/ provide a high level overview of database systems.</description>
    </item>
    
    <item>
      <title>GitHub Classroom</title>
      <link>https://teachdatascience.com/gitclass/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/gitclass/</guid>
      <description>GitHub ClassroomIf you have been reading along in the blog, you’ve noticed the last two entries describing GitHub and GitHub in R. And certainly, we continue to advocate teaching students to use GitHub as an integral part of their data science workflow. And GitHub may be the perfect place to store student projects either as public or private repositories.
But using GitHub to navigate a dozen homework assignments with 50 students can become logistically difficult.</description>
    </item>
    
    <item>
      <title>Using GitHub in R</title>
      <link>https://teachdatascience.com/githubinr/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/githubinr/</guid>
      <description>Once you get the hang of using Projects in RStudio, you may be inclined to collaborate with others on the same project. If so, you will want to set up a Project that links directly to GitHub. By having your project on GitHub (and regularly saving it / updating it on GitHub), your collaborators will always have access to the most up to date analysis information.
Previous posts have described working with R Projects and working with GitHub.</description>
    </item>
    
    <item>
      <title>Leaflet for mapping</title>
      <link>https://teachdatascience.com/leaflet/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/leaflet/</guid>
      <description>Leaflet for mappingMaps are an important way of displaying data.
The leaflet package in R provides access to the Leaflet Javascript libraries (http://leafletjs.com), an open-source mechanism to create interactive maps. The leaflet package (https://rstudio.github.io/leaflet/) provides an interface within R that allows for composing maps using map tiles (e.g., from OpenStreetMap, https://www.openstreetmap.org/#map=5/38.007/-95.844) that can be annotated with markers, lines, popups.
Here’s a simple example where data from higher education institutions from within the Five College Consortium in Western Massachusetts is mapped.</description>
    </item>
    
    <item>
      <title>Guidelines for Assessment and Instruction in Statistics Education</title>
      <link>https://teachdatascience.com/gaise/</link>
      <pubDate>Wed, 05 Jun 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/gaise/</guid>
      <description>The American Statistical Association has placeda priority on how best to teach statistics and data science. The Guidelines for Assessment and Instruction in Statistics Education (GAISE) reports have served a key role in guiding instructors and institutions in their pedagogical choices.
Two GAISE reports have been written: one focused on statistics at the PreK-12 level and another, revised in 2016, focused on college level courses. In this GAISE blog entry we focus on the college report.</description>
    </item>
    
    <item>
      <title>Watching an expert work through a data analysis using the tidyverse</title>
      <link>https://teachdatascience.com/screencast/</link>
      <pubDate>Mon, 03 Jun 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/screencast/</guid>
      <description>Watching an expert work through a data analysis using the tidyverseTeaching Data Science is challenging since it involves teaching the entire data science analysis cycle. While it’s helpful for students to experience this process, they can often feel at sea in terms of the decisions they need to make and the iterative process of exploration, modeling, summarization.
We’ve been using the data science cycle promulgated by Hadley Wickham and Garrett Grolemund (both from RStudio) that was published in their excellent book: R for Data Science, https://r4ds.</description>
    </item>
    
    <item>
      <title>The Tidyverse</title>
      <link>https://teachdatascience.com/tidyverse/</link>
      <pubDate>Sun, 02 Jun 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/tidyverse/</guid>
      <description>What is the Tidyverse?The tidyverse is a coherent system of R packages for data wrangling, exploration and visualization that share a common design philosophy. These packages are intended to make statisticians and data scientists more productive by guiding them through workflows that facilitate communication, and result in reproducible work products. Unpacking the tidyverse, all that it means and contains, could easily take a dedicated book or blog in itself.</description>
    </item>
    
    <item>
      <title>Projects in RStudio</title>
      <link>https://teachdatascience.com/projects/</link>
      <pubDate>Thu, 30 May 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/projects/</guid>
      <description>What are Projects?RStudio Projects are a mechanism for keeping all the files associated with a project together in one place – data, R scripts, results, figures, reports, etc. Projects are built in to the RStudio IDE, and for good reproducible workflow, all projects should start by creating a Project.
Why RStudio?It goes almost without saying that as a group we have moved completely to the RStudio interface to R.</description>
    </item>
    
    <item>
      <title>Getting Started With R Markdown</title>
      <link>https://teachdatascience.com/rmarkdown/</link>
      <pubDate>Wed, 29 May 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/rmarkdown/</guid>
      <description>What is R Markdown?Straight from RStudio’s wonderful tutorial, R Markdown is an authoring framework for data science. An R Markdown file is a plain text file with three types of content: code chunks to run, text to display, and metadata to help govern the R Markdown build process. Put simply, R Markdown is an exciting new reporting medium that seamlessly integrates executable code and expository text.
By including data work, code, and analysis narrative into a single document, R Markdown provides a fully reproducible vehicle for data science projects!</description>
    </item>
    
    <item>
      <title>Ingesting Data</title>
      <link>https://teachdatascience.com/ingestingdata/</link>
      <pubDate>Tue, 28 May 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/ingestingdata/</guid>
      <description>Why use data from outside sources?The world is awash in data, and whatever else we teach in a data science curriculum, data must be at the center. Calls to modernize statistics and data science courses regularly point to using “real” data. The National Academies Report on Data Science for Undergraduates (see previous blog post at: https://teachdatascience.com/nasem/) reports Data Management &amp;amp; Curation as a core part of data acumen. Indeed, they recognize data provenance to be a key skill which is “important for all students in [a] data science program.</description>
    </item>
    
  </channel>
</rss>