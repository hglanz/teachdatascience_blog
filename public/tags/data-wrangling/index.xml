<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data wrangling on Teach Data Science</title>
    <link>https://teachdatascience.com/tags/data-wrangling/</link>
    <description>Recent content in data wrangling on Teach Data Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>(c) 2019 Copyright Teach Data Science</copyright>
    <lastBuildDate>Sun, 28 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://teachdatascience.com/tags/data-wrangling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Counting commits and peer code review</title>
      <link>https://teachdatascience.com/countingcommits/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/countingcommits/</guid>
      <description>Today’s guest entry by Amelia McNamara (University of St. Thomas) describes a creative way that she tackled a problem in one of her upper level courses.
One note: The JSM is underway. Looking for interesting talks? Mine’s excellent Shiny for JSM 2019 app for those of you in Denver.
This past semester, I taught two sections of a course called Advanced Statistical Software (yes, I’m aware of the acronym. We’re changing the course title soon…).</description>
    </item>
    
    <item>
      <title>reticulate: running Python within RStudio</title>
      <link>https://teachdatascience.com/reticulate/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/reticulate/</guid>
      <description>For many statisticians, their go-to software language is R. However, there is no doubt that Python is an equally important language in data science. Indeed, the Jupyter blog entry from earlier this week described the capacities of writing Python code (as well as R and Julia and other environments) using interactive Jupyter notebooks.
knitr::opts_chunk$set(collapse = TRUE)library(reticulate)use_virtualenv(&amp;quot;r-reticulate&amp;quot;)use_python(&amp;quot;F:/Anaconda3&amp;quot;, required = TRUE)py_config()Teaching Python and RA quick google search can quickly bring up many arguments on both sides of the heated Python vs R debate.</description>
    </item>
    
    <item>
      <title>pandas: Python data analysis library</title>
      <link>https://teachdatascience.com/pandas/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://teachdatascience.com/pandas/</guid>
      <description>About pandaspandas is an open-source library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language. Straight from the library’s homepage, “pandas helps fill Python’s long-standing gap in tools for data analysis and modeling.”
In short, pandas offers some new and some improved Python tools for doing the following:
Reading data in to data frame-type structures
Viewing and selecting data
Handling missing data</description>
    </item>
    
    <item>
      <title>Watching an expert work through a data analysis using the tidyverse</title>
      <link>https://teachdatascience.com/screencast/</link>
      <pubDate>Mon, 03 Jun 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/screencast/</guid>
      <description>Watching an expert work through a data analysis using the tidyverseTeaching Data Science is challenging since it involves teaching the entire data science analysis cycle. While it’s helpful for students to experience this process, they can often feel at sea in terms of the decisions they need to make and the iterative process of exploration, modeling, summarization.
We’ve been using the data science cycle promulgated by Hadley Wickham and Garrett Grolemund (both from RStudio) that was published in their excellent book: R for Data Science, https://r4ds.</description>
    </item>
    
    <item>
      <title>The Tidyverse</title>
      <link>https://teachdatascience.com/tidyverse/</link>
      <pubDate>Sun, 02 Jun 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/tidyverse/</guid>
      <description>What is the Tidyverse?The tidyverse is a coherent system of R packages for data wrangling, exploration and visualization that share a common design philosophy. These packages are intended to make statisticians and data scientists more productive by guiding them through workflows that facilitate communication, and result in reproducible work products. Unpacking the tidyverse, all that it means and contains, could easily take a dedicated book or blog in itself.</description>
    </item>
    
    <item>
      <title>Ingesting Data</title>
      <link>https://teachdatascience.com/ingestingdata/</link>
      <pubDate>Tue, 28 May 2019 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/ingestingdata/</guid>
      <description>Why use data from outside sources?The world is awash in data, and whatever else we teach in a data science curriculum, data must be at the center. Calls to modernize statistics and data science courses regularly point to using “real” data. The National Academies Report on Data Science for Undergraduates (see previous blog post at: https://teachdatascience.com/nasem/) reports Data Management &amp;amp; Curation as a core part of data acumen. Indeed, they recognize data provenance to be a key skill which is “important for all students in [a] data science program.</description>
    </item>
    
    <item>
      <title>SQL 101 in R</title>
      <link>https://teachdatascience.com/sql/</link>
      <pubDate>Sun, 17 Jun 2018 21:13:14 -0500</pubDate>
      
      <guid>https://teachdatascience.com/sql/</guid>
      <description>The NASEM Data Science for Undergraduates report noted that the storage, preparation, and accessing of data is at the heart of data science and that students need to directly experience multiple forms of data, including the use of databases.
SQL (pronounced sequel) stands for Structured Query Language; it is a language designed to manage data in a relational database system. The papers https://chance.amstat.org/2015/04/setting-the-stage and https://chance.amstat.org/2015/04/databases/ provide a high level overview of database systems.</description>
    </item>
    
  </channel>
</rss>
